{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/Searchbar.js","Components/Scroll.js","Components/ErrorBoundary.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","Fragment","className","alt","src","id","name","email","CardList","robots","cardArray","map","user","i","searchBar","searchChange","type","placeholder","onChange","scroll","style","overflowY","border","height","marginTop","children","Error","state","hasError","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","respnse","json","users","filterRobots","filter","toLowerCase","split","join","includes","length","Scroll","ErrorBoundary","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"yQAyBeA,EArBF,SAACC,GACV,OACI,cAAC,IAAMC,SAAP,UACI,sBAAMC,UAAU,iBAAhB,SAEA,sBAAKA,UAAU,yCAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BJ,EAAMK,GAAhC,OAErB,gCAEG,6BAAKL,EAAMM,OACV,4BAAIN,EAAMO,mBCMfC,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACVC,EAAYD,EAAOE,KAAI,SAACC,EAAMC,GAChC,OAAQ,cAAC,EAAD,CAEJR,GAAII,EAAOI,GAAGR,GACdC,KAAMG,EAAOI,GAAGP,KAChBC,MAAOE,EAAOI,GAAGN,OAHZM,MASb,OACI,cAAC,WAAD,UACMH,KCHCI,EAbG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,8BACE,uBACAC,KAAK,SAASC,YAAY,eAC1Bf,UAAU,8BACVgB,SAAUH,OCCLI,G,MAPD,SAACnB,GACX,OACI,sBAAKoB,MAAO,CAACC,UAAU,SAASC,OAAO,kBAAmBC,OAAO,QAAQC,UAAU,QAAnF,UACGxB,EAAMyB,SADT,SCiBOC,E,kDAjBX,WAAY1B,GAAO,IAAD,8BACd,cAAMA,IACD2B,MAAQ,CACTC,UAAW,GAHD,E,qDAOlB,WACIC,KAAKC,SAAS,CAAEF,UAAS,M,oBAE7B,WACI,OAAGC,KAAKF,MAAMC,SACF,2DAELC,KAAK7B,MAAMyB,a,GAfNM,aCmDLC,E,kDA9Cb,WAAYhC,GAAQ,IAAD,8BACjB,cAAMA,IAeRiC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAf1C,EAAKV,MAAQ,CACXlB,OAAQ,GACR0B,YAAa,IAJE,E,qDAQnB,WAAqB,IAAD,OAClBG,MAAM,8CAA8CC,MAAK,SAAAC,GACvD,OAAOA,EAAQC,UAEdF,MAAK,SAAAG,GACJ,EAAKZ,SAAS,CAAErB,OAAQiC,S,oBAM9B,WAAU,IAAD,OAGDC,EAAed,KAAKF,MAAMlB,OAAOmC,QAAO,SAAAnC,GAC5C,OAAOA,EAAOH,KAAKuC,cAAcC,MAAM,KAAKC,KAAK,IAAIC,SACnD,EAAKrB,MAAMQ,YAAYU,cAAcC,MAAM,KAAKC,KAAK,QAGzD,OAAKlB,KAAKF,MAAMlB,OAAOwC,OAInB,cAAC,IAAMhD,SAAP,UACE,sBAAKC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWa,aAAcc,KAAKI,iBAC9B,cAACiB,EAAD,UACE,cAACC,EAAD,UACE,cAAC,EAAD,CAAU1C,OAAQkC,aATrB,oBAAIzC,UAAU,WAAd,4B,GA7BK6B,aCMHqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OAEL,cAAC,EAAD,IAGFC,SAASC,eAAe,SAO1BX,M","file":"static/js/main.26c5f4c6.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\nimport 'tachyons';\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <span className=\"card-component\">\r\n            \r\n            <div className=\" bg-light-yellow br3 pd3 shadow-5 grow\">\r\n                <img alt='robots' src={`https://robohash.org/${props.id}?`} />\r\n\r\n                <div>\r\n                     \r\n                   <h2>{props.name}</h2>\r\n                    <p>{props.email}</p>\r\n                </div>\r\n            </div>\r\n           \r\n\r\n            </span>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default Card;","import React,{ Fragment } from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    const cardArray = robots.map((user, i) => {\r\n        return (<Card\r\n            key={i}\r\n            id={robots[i].id}\r\n            name={robots[i].name}\r\n            email={robots[i].email}\r\n        />\r\n        );\r\n    \r\n\r\n    });\r\n    return (\r\n        <Fragment>\r\n            { cardArray }\r\n        </Fragment>\r\n    );\r\n}\r\nexport default CardList;","import React from 'react';\r\nconst searchBar = ({searchChange}) => {\r\n    return (\r\n        <div>\r\n          <input \r\n          type=\"search\" placeholder=\"Find by name\"\r\n          className=\"bg-lightest-blue br3 pa3 ba\"\r\n          onChange={searchChange}\r\n          >\r\n          </input>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default searchBar;","import React from 'react';\r\nconst scroll =(props)=>{\r\n    return(\r\n        <div style={{overflowY:'scroll',border:'5px solid black' ,height:'500px',marginTop:'15px'}}>\r\n          {props.children};\r\n        </div>\r\n    );\r\n}\r\nexport default scroll;","import React,{Component} from 'react';\r\n\r\nclass Error extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError : false\r\n        }\r\n\r\n    }\r\n    componentDidCatch(){\r\n        this.setState({ hasError:true });\r\n    }\r\n    render(){\r\n        if(this.state.hasError){\r\n            return (<h1>Oops some error occurred!</h1>)\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\nexport default Error;","import React, { Component } from 'react';\r\nimport CardList from '../Components/CardList';\r\nimport SearchBar from '../Components/Searchbar';\r\nimport './App.css';\r\nimport Scroll from '../Components/Scroll';\r\nimport ErrorBoundary from '../Components/ErrorBoundary';\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: '',\r\n\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    fetch(`https://jsonplaceholder.typicode.com/users`).then(respnse => {\r\n      return respnse.json();\r\n    })\r\n      .then(users => {\r\n        this.setState({ robots: users });\r\n      })\r\n  }\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value });\r\n  }\r\n  render() {\r\n    //to remove this.state destructure it.\r\n    //const {robots,searchfield} = this.state;\r\n    const filterRobots = this.state.robots.filter(robots => {\r\n      return robots.name.toLowerCase().split(\" \").join(\"\").includes(\r\n        this.state.searchfield.toLowerCase().split(\" \").join(\"\")\r\n      );\r\n    })\r\n    if (!this.state.robots.length) {\r\n      return <h1 className=\"load-bar\">LOADING...</h1>\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"tc\">\r\n            <h1 className=\"f1\">ROBOFRIENDS</h1>\r\n            <SearchBar searchChange={this.onSearchChange} />\r\n            <Scroll>\r\n              <ErrorBoundary>\r\n                <CardList robots={filterRobots} />\r\n              </ErrorBoundary>\r\n            </Scroll>\r\n          </div>\r\n        </React.Fragment>\r\n      )\r\n    }\r\n  }\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/Containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n   \n    <App /> \n   \n  ,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}